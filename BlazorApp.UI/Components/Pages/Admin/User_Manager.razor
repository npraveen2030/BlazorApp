@if (UserDetails is not null)
{
<!-- Modal to Add User -->
<div class="modal fade" id="AddUserModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered">
		<div class="modal-content">
			<div class="modal-header">
				<h1 class="modal-title fs-5" id="AddUserModalLabel">User Details</h1>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
					<EditForm Model="@AdminAddUserForm" OnValidSubmit="AddUserSubmitHandler" class="p-3">
						<DataAnnotationsValidator />

						<!-- Username Input -->
						<div class="row mb-3 align-items-center">
							<div class="col-auto">
								<label for="UserName" class="col-form-label">Username:</label>
							</div>
							<div class="col-auto">
								<InputText id="UserName"
										   @bind-Value="AdminAddUserForm.UserName"
										   class="form-control"
										   placeholder="Please enter the username"
										   style="width: 250px; height: 40px;" />
								<ValidationMessage For="@(() => AdminAddUserForm.UserName)" />
							</div>
						</div>

						<!-- Password Input -->
						<div class="row mb-3 align-items-center">
							<div class="col-auto">
								<label for="Password" class="col-form-label">Password:</label>
							</div>
							<div class="col-auto">
								<InputText id="Password"
										   @bind-Value="AdminAddUserForm.Password"
										   class="form-control"
										   placeholder="Please enter the password"
										   type="password"
										   style="width: 250px; height: 40px;" />
								<ValidationMessage For="@(() => AdminAddUserForm.Password)" />
							</div>
						</div>

						<!-- Buttons -->
						<div class="modal-footer">
							<button type="submit" class="btn btn-primary">Add User</button>
							<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
						</div>
					</EditForm>

			</div>
		</div>
	</div>
</div>

<!-- Modal to conform delete -->
<div class="modal fade" id="DeleteConfirmationModal" tabindex="-1" aria-labelledby="exampleModalLabel"
aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered">
		<div class="modal-content">
			<div class="modal-header">
				<h1 class="modal-title fs-5" id="DeleteConfirmationModal">Confirm deletion</h1>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<p>@(DeleteConfirmationuser.UserName) will be removed</p>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-primary"
				@onclick="() => HandleInActive(DeleteConfirmationuser)">
					Delete
				</button>
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
			</div>
		</div>
	</div>
</div>


<div class="user-manager-container mx-auto">
	<RadzenDataGrid Data="@UserDetails"
	TItem="UserDetailDto"
	Style="height:500px ; width:100% ; margin: auto ; margin-top:10vh;"
	AllowPaging="true"
	PagerPosition=PagerPosition.Bottom
	PagerHorizontalAlign=HorizontalAlign.Right
	PageSizeOptions="@pageSizeOptions"
	GridLines="Radzen.DataGridGridLines.Both"
	AllowColumnResize="true"
	ColumnResized=@gridPreferencesSaver.OnColumnResized
	AllowColumnReorder="true"
	ColumnReordered=@gridPreferencesSaver.OnColumnReordered
	AllowColumnPicking="true"
	PickedColumnsChanged="@gridPreferencesSaver.PickedColumnsChanged">
		<HeaderTemplate>
			<div class="d-flex align-items-center">
				<button type="button" class="btn btn-dark rounded-0 fs-custom" data-bs-toggle="modal"
				data-bs-target="#AddUserModal">
					Add User
				</button>
			</div>
		</HeaderTemplate>
		<Columns>
			<RadzenDataGridColumn TItem="UserDetailDto"
			Property="UserId"
			Title="UserId"
			Width="@GridState["UserId"].Width"
			OrderIndex="@GridState["UserId"].OrderIndex"
			Visible="@GridState["UserId"].Visible" />

			<RadzenDataGridColumn TItem="UserDetailDto"
			Property="UserName"
			Title="UserName"
			Width="@GridState["UserName"].Width"
			OrderIndex="@GridState["UserName"].OrderIndex"
			Visible="@GridState["UserName"].Visible" />

			<RadzenDataGridColumn TItem="UserDetailDto"
			Property="Password"
			Title="Password"
			Width="@GridState["Password"].Width"
			OrderIndex="@GridState["Password"].OrderIndex"
			Visible="@GridState["Password"].Visible">
				<Template Context="data">
					@if (data.IsEdit == true)
					{
						<InputText @bind-Value="data.Password" />
					}
					else
					{
						<span>@data.Password</span>
					}
				</Template>
			</RadzenDataGridColumn>

			<RadzenDataGridColumn TItem="UserDetailDto"
			Property="CreatedBy"
			Title="CreatedBy"
			Width="@GridState["CreatedBy"].Width"
			OrderIndex="@GridState["CreatedBy"].OrderIndex"
			Visible="@GridState["CreatedBy"].Visible" />

			<RadzenDataGridColumn TItem="UserDetailDto"
			Property="CreatedDate"
			Title="CreatedDate"
			Width="@GridState["CreatedDate"].Width"
			OrderIndex="@GridState["CreatedDate"].OrderIndex"
			Visible="@GridState["CreatedDate"].Visible" />

			<RadzenDataGridColumn TItem="UserDetailDto"
			Property="ModifiedBy"
			Title="ModifiedBy"
			Width="@GridState["ModifiedBy"].Width"
			OrderIndex="@GridState["ModifiedBy"].OrderIndex"
			Visible="@GridState["ModifiedBy"].Visible" />

			<RadzenDataGridColumn TItem="UserDetailDto"
			Property="ModifiedDate"
			Title="ModifiedDate"
			Width="@GridState["ModifiedDate"].Width"
			OrderIndex="@GridState["ModifiedDate"].OrderIndex"
			Visible="@GridState["ModifiedDate"].Visible" />

			<RadzenDataGridColumn TItem="UserDetailDto"
			Property="IsActive"
			Title="IsActive"
			Width="@GridState["IsActive"].Width"
			OrderIndex="@GridState["IsActive"].OrderIndex"
			Visible="@GridState["IsActive"].Visible">
				<Template Context="data">
					@if (data.IsEdit == true)
					{
						<InputCheckbox @bind-Value="data.IsActive" />
					}
					else
					{
						<span>@(data.IsActive ? "active" : "inactive")</span>
					}
				</Template>
			</RadzenDataGridColumn>

			<RadzenDataGridColumn TItem="UserDetailDto"
			Title="Edit"
			Frozen="true"
			FrozenPosition="FrozenColumnPosition.Right"
			TextAlign="TextAlign.Center"
			Reorderable="false"
			Resizable="false"
			Width="100px">
				<Template Context="data">
					@if (data.IsEdit == false)
					{
						<RadzenButton Icon="edit"
						ButtonStyle="ButtonStyle.Primary"
						Size="ButtonSize.Small"
						Click="@(() => HandleEdit(data))" />
					}
					else
					{
						<RadzenButton Icon="save"
									  ButtonStyle="ButtonStyle.Success"
									  Size="ButtonSize.Small"
									  Click="@(() => HandleSubmit(data))" />
					}
				</Template>
			</RadzenDataGridColumn>

			<RadzenDataGridColumn TItem="UserDetailDto"
								  Title="Change Status"
								  Frozen="true"
								  FrozenPosition="FrozenColumnPosition.Right"
								  TextAlign="TextAlign.Center"
								  Reorderable="false"
								  Resizable="false"
								  Width="100px">
				<Template Context="data">
					@if (data.IsEdit == false)
					{
						@if (data.IsActive)
						{
							<button type="button" class="btn btn-danger table-fs" data-bs-toggle="modal"
									data-bs-target="#DeleteConfirmationModal" @onclick="() => DeleteConfirmationuser = data">
								Delete
							</button>

						}
						else
						{
							<button type="button" class="btn btn-danger table-fs" @onclick="() => HandleActive(data)">
								Activate
							</button>
						}
					}
					else
					{
						<RadzenButton Icon="close"
									  ButtonStyle="ButtonStyle.Danger"
									  Size="ButtonSize.Small"
									  Click="@(() => HandleCancel(data))" />
					}
				</Template>
			</RadzenDataGridColumn>
		</Columns>
	</RadzenDataGrid>

</div>
}
else
{
	<h1>Loading...</h1>
}